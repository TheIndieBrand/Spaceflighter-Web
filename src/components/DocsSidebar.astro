---
let { docs } = Astro.props;

if (!docs) docs = [];

type DocType = {
	slug: string;
    html: string;
    dir?: string;
}
---

<aside class="docs-sidebar">
    <div class="sidebar-header">
        <div class="sidebar-brand">
            <span class="brand-icon">ðŸ“š</span>
            <span class="brand-text">Spaceflighter Wiki</span>
        </div>
        
        <button class="search-trigger" id="searchTrigger">
            <i class="bi bi-search"></i>
            <span class="search-placeholder">Buscar...</span>
            <kbd class="search-kbd">
                <span>Ctrl</span>
                <span>K</span>
            </kbd>
        </button>
    </div>

    <nav class="sidebar-nav">
        <ul class="nav-list">
            {(() => {
                const groupedDocs = new Map();
                const rootDocs: any = [];
                
                docs.forEach((doc: any) => {
                    if (doc.dir) {
                        if (!groupedDocs.has(doc.dir)) {
                            groupedDocs.set(doc.dir, []);
                        }
                        groupedDocs.get(doc.dir).push(doc);
                    } else {
                        rootDocs.push(doc);
                    }
                });

                return [
                    ...rootDocs.map((doc: any) => (
                        <li class="nav-item">
                            <a href={`/wiki/${doc.slug}`} class="nav-link file-link">
                                <div class="nav-content">
                                    <i class="bi bi-file-earmark-text file-icon"></i>
                                    <span class="nav-text">{doc.title || doc.slug}</span>
                                </div>
                            </a>
                        </li>
                    )),
                    
                    ...Array.from(groupedDocs.entries()).map(([dirName, dirDocs]) => (
                        <li class="nav-item folder-item">
                            <button class="nav-link folder-toggle">
                                <div class="nav-content">
                                    <i class="bi bi-chevron-right chevron-icon"></i>
                                    <i class="bi bi-folder-fill folder-icon"></i>
                                    <span class="nav-text">{dirName}</span>
                                </div>
                            </button>
                            <ul class="nav-children">
                                {dirDocs.map((doc: any) => (
                                    <li class="nav-item">
                                        <a href={`/wiki/${doc.slug}`} class="nav-link file-link">
                                            <div class="nav-content">
                                                <i class="bi bi-file-earmark-text file-icon"></i>
                                                <span class="nav-text">{doc.title || doc.slug}</span>
                                            </div>
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        </li>
                    ))
                ];
            })()}
        </ul>
    </nav>

    <div class="search-modal" id="searchModal">
        <div class="search-modal-overlay"></div>
        <div class="search-modal-content">
            <div class="search-input-wrapper">
                <i class="bi bi-search search-input-icon"></i>
                <input 
                    type="text" 
                    class="search-input" 
                    id="searchInput"
                    placeholder="Buscar en la documentaciÃ³n..."
                    autocomplete="off"
                />
                <button class="search-close" id="searchClose">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="search-results" id="searchResults"></div>
        </div>
    </div>

    <div class=".container-sm" style="margin-left: 30%; margin-bottom: 2%;">
        <a href="/" class="btn btn-outline-secondary" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;">
            Volver al inicio
        </a>
    </div>
</aside>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const folderToggles = document.querySelectorAll('.folder-toggle');
        
        folderToggles.forEach(toggle => {
            toggle.addEventListener('click', () => {
                const parentItem = toggle.closest('.folder-item');
                const chevron = toggle.querySelector('.chevron-icon') as HTMLElement;
                
                if (parentItem && chevron) {
                    const isCollapsed = parentItem.classList.contains('collapsed');
                    
                    if (isCollapsed) {
                        parentItem.classList.remove('collapsed');
                        chevron.classList.remove('collapsed');
                    } else {
                        parentItem.classList.add('collapsed');
                        chevron.classList.add('collapsed');
                    }
                }
            });
        });

        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.file-link[href]');
        
        navLinks.forEach(link => {
            const linkPath = (link as HTMLAnchorElement).pathname;
            if (linkPath === currentPath) {
                link.classList.add('active');

                const parentFolder = link.closest('.folder-item');
                if (parentFolder) {
                    parentFolder.classList.remove('collapsed');
                    const chevron = parentFolder.querySelector('.chevron-icon') as HTMLElement;
                    if (chevron) {
                        chevron.classList.remove('collapsed');
                    }
                }
            }
        });

        const searchTrigger = document.getElementById('searchTrigger');
        const searchModal = document.getElementById('searchModal');
        const searchClose = document.getElementById('searchClose');
        const searchInput = document.getElementById('searchInput') as HTMLInputElement;
        const searchResults = document.getElementById('searchResults');
        const modalOverlay = searchModal?.querySelector('.search-modal-overlay');

        function openSearchModal() {
            searchModal?.classList.add('active');
            document.body.style.overflow = 'hidden';
            setTimeout(() => searchInput?.focus(), 100);
        }

        function closeSearchModal() {
            searchModal?.classList.remove('active');
            document.body.style.overflow = '';
            if (searchInput) searchInput.value = '';
            if (searchResults) searchResults.innerHTML = '';
        }

        searchTrigger?.addEventListener('click', openSearchModal);
        searchClose?.addEventListener('click', closeSearchModal);
        modalOverlay?.addEventListener('click', closeSearchModal);

        document.addEventListener('keydown', (e) => {
            if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
                e.preventDefault();
                openSearchModal();
            }
            
            if (e.key === 'Escape' && searchModal?.classList.contains('active')) {
                closeSearchModal();
            }
        });

        searchInput?.addEventListener('input', (e) => {
            const query = (e.target as HTMLInputElement).value.toLowerCase().trim();
            
            if (!query) {
                if (searchResults) searchResults.innerHTML = '';
                return;
            }

            const allLinks = Array.from(document.querySelectorAll('.file-link[href]'));
            const results = allLinks.filter(link => {
                const text = link.textContent?.toLowerCase() || '';
                return text.includes(query);
            });

            if (searchResults) {
                if (results.length === 0) {
                    searchResults.innerHTML = '<div class="no-results">No se encontraron resultados</div>';
                } else {
                    searchResults.innerHTML = results.map(link => {
                        const href = (link as HTMLAnchorElement).href;
                        const text = link.textContent?.trim() || '';
                        return `
                            <a href="${href}" class="search-result-item">
                                <i class="bi bi-file-earmark-text"></i>
                                <span>${text}</span>
                            </a>
                        `;
                    }).join('');

                    searchResults.querySelectorAll('.search-result-item').forEach(item => {
                        item.addEventListener('click', closeSearchModal);
                    });
                }
            }
        });
    });
</script>

<style>
    :root {
        --sidebar-width: 260px;
        --sidebar-bg: #ffffff;
        --sidebar-text: #37352f;
        --sidebar-text-muted: #787774;
        --sidebar-border: #e9e9e7;
        --sidebar-hover: rgba(0, 0, 0, 0.03);
        --sidebar-active: rgba(35, 131, 226, 0.08);
        --sidebar-active-text: #2383e2;
        --sidebar-shadow: rgba(0, 0, 0, 0.024);
    }

    @media (prefers-color-scheme: dark) {
        :root {
            --sidebar-bg: #1e1e1e;
            --sidebar-text: #e3e3e3;
            --sidebar-text-muted: #9b9a97;
            --sidebar-border: #2f2f2f;
            --sidebar-hover: rgba(255, 255, 255, 0.05);
            --sidebar-active: rgba(90, 159, 212, 0.15);
            --sidebar-active-text: #5a9fd4;
            --sidebar-shadow: rgba(0, 0, 0, 0.4);
        }
    }

    .docs-sidebar {
        position: fixed;
        top: 0;
        left: 0;
        width: var(--sidebar-width);
        height: 100vh;
        background: var(--sidebar-bg);
        border-right: 1px solid var(--sidebar-border);
        display: flex;
        flex-direction: column;
        z-index: 1000;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
        
        scrollbar-width: thin;
        scrollbar-color: var(--sidebar-border) transparent;
    }

    .docs-sidebar::-webkit-scrollbar {
        width: 6px;
    }

    .docs-sidebar::-webkit-scrollbar-track {
        background: transparent;
    }

    .docs-sidebar::-webkit-scrollbar-thumb {
        background-color: var(--sidebar-border);
        border-radius: 3px;
    }

    .sidebar-header {
        padding: 12px;
        border-bottom: 1px solid var(--sidebar-border);
        flex-shrink: 0;
    }

    .sidebar-brand {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 6px 8px;
        margin-bottom: 8px;
    }

    .brand-icon {
        font-size: 1.125rem;
        line-height: 1;
    }

    .brand-text {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--sidebar-text);
        letter-spacing: -0.01em;
    }

    .search-trigger {
        width: 100%;
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 6px 8px;
        background: var(--sidebar-hover);
        border: 1px solid var(--sidebar-border);
        border-radius: 6px;
        color: var(--sidebar-text-muted);
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.15s ease;
    }

    .search-trigger:hover {
        background: var(--sidebar-hover);
        border-color: var(--sidebar-active-text);
    }

    .search-trigger i {
        font-size: 0.875rem;
        flex-shrink: 0;
    }

    .search-placeholder {
        flex: 1;
        text-align: left;
    }

    .search-kbd {
        display: flex;
        gap: 4px;
        margin-left: auto;
    }

    .search-kbd span {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 20px;
        height: 20px;
        padding: 0 4px;
        background: var(--sidebar-bg);
        border: 1px solid var(--sidebar-border);
        border-radius: 3px;
        font-size: 0.688rem;
        font-weight: 500;
        line-height: 1;
        box-shadow: 0 1px 2px var(--sidebar-shadow);
    }

    .sidebar-nav {
        flex: 1;
        overflow-y: auto;
        padding: 8px 4px;
    }

    .nav-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-item {
        margin: 1px 0;
    }

    .nav-link {
        display: flex;
        align-items: center;
        width: 100%;
        padding: 0;
        background: none;
        border: none;
        color: var(--sidebar-text);
        text-decoration: none;
        cursor: pointer;
        font-size: 0.875rem;
        transition: all 0.15s ease;
    }

    .nav-content {
        display: flex;
        align-items: center;
        gap: 8px;
        width: 100%;
        padding: 6px 8px;
        border-radius: 4px;
        transition: background-color 0.15s ease;
    }

    .nav-link:hover .nav-content {
        background: var(--sidebar-hover);
    }

    .nav-link.active .nav-content {
        background: var(--sidebar-active);
        color: var(--sidebar-active-text);
        font-weight: 500;
    }

    .nav-link.active .file-icon {
        color: var(--sidebar-active-text);
    }

    .nav-text {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        line-height: 1.5;
        font-weight: 400;
    }

    .nav-link.active .nav-text {
        font-weight: 500;
    }

    .folder-icon,
    .file-icon {
        font-size: 1rem;
        flex-shrink: 0;
        line-height: 1;
    }

    .folder-icon {
        color: #f59e0b;
    }

    @media (prefers-color-scheme: dark) {
        .folder-icon {
            color: #fbbf24;
        }
    }

    .file-icon {
        color: #60a5fa;
    }

    @media (prefers-color-scheme: dark) {
        .file-icon {
            color: #93c5fd;
        }
    }

    .folder-item {
        margin: 2px 0;
    }

    .folder-toggle {
        width: 100%;
        text-align: left;
    }

    .folder-toggle .nav-text {
        font-weight: 500;
        color: var(--sidebar-text);
    }

    .chevron-icon {
        font-size: 0.75rem;
        color: var(--sidebar-text-muted);
        transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        flex-shrink: 0;
        margin-right: 2px;
        transform: rotate(90deg);
    }

    .chevron-icon.collapsed {
        transform: rotate(0deg);
    }

    .nav-children {
        list-style: none;
        padding: 0;
        margin: 0 0 0 28px;
        overflow: hidden;
        max-height: 1000px;
        opacity: 1;
        transition: max-height 0.2s ease, opacity 0.2s ease;
    }

    .folder-item.collapsed .nav-children {
        max-height: 0;
        opacity: 0;
    }

    .nav-children .nav-link {
        font-size: 0.875rem;
    }

    .nav-children .nav-text {
        font-weight: 400;
    }

    .search-modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 9999;
        display: none;
        align-items: flex-start;
        justify-content: center;
        padding-top: 10vh;
    }

    .search-modal.active {
        display: flex;
    }

    .search-modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(4px);
        animation: fadeIn 0.15s ease;
    }

    .search-modal-content {
        position: relative;
        width: 90%;
        max-width: 600px;
        background: var(--sidebar-bg);
        border-radius: 8px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        animation: slideDown 0.2s ease;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px) scale(0.98);
        }
        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .search-input-wrapper {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 16px;
        border-bottom: 1px solid var(--sidebar-border);
    }

    .search-input-icon {
        font-size: 1.125rem;
        color: var(--sidebar-text-muted);
        flex-shrink: 0;
    }

    .search-input {
        flex: 1;
        background: none;
        border: none;
        color: var(--sidebar-text);
        font-size: 1rem;
        outline: none;
    }

    .search-input::placeholder {
        color: var(--sidebar-text-muted);
    }

    .search-close {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: none;
        border: none;
        border-radius: 4px;
        color: var(--sidebar-text-muted);
        cursor: pointer;
        transition: background-color 0.15s ease;
    }

    .search-close:hover {
        background: var(--sidebar-hover);
    }

    .search-results {
        max-height: 400px;
        overflow-y: auto;
        padding: 8px;
    }

    .search-result-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 10px 12px;
        border-radius: 6px;
        color: var(--sidebar-text);
        text-decoration: none;
        transition: background-color 0.15s ease;
    }

    .search-result-item:hover {
        background: var(--sidebar-hover);
    }

    .search-result-item i {
        font-size: 1rem;
        color: var(--sidebar-text-muted);
        flex-shrink: 0;
    }

    .no-results {
        padding: 32px;
        text-align: center;
        color: var(--sidebar-text-muted);
        font-size: 0.875rem;
    }

    @media (max-width: 991px) {
        .docs-sidebar {
            position: relative;
            width: 100%;
            height: auto;
            max-height: none;
            border-right: none;
            border-bottom: 1px solid var(--sidebar-border);
        }

        .sidebar-nav {
            max-height: 400px;
        }
    }

    .nav-link:focus-visible,
    .folder-toggle:focus-visible,
    .search-trigger:focus-visible {
        outline: 2px solid var(--sidebar-active-text);
        outline-offset: 2px;
    }
</style>